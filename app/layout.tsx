import './globals.css'
import type { Metadata } from 'next'
import { Outfit } from 'next/font/google'
import { Providers } from './GlobalRedux/provider'
import Navbar from './components/Navbar/Navbar'
import LoadData from './LoadData'
import  SessionProvider  from './components/SessionProvider'
import { getServerSession } from 'next-auth'
import Welcome from './components/Welcome'
import { Session } from 'next-auth'
import { expense } from './types/Expense'
import prisma from '../prisma/_base'

//const prisma = new PrismaClient()

const inter = Outfit({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  //const expenses = await prisma.expense.findMany();
  const session = await getServerSession();

  const expenses = await getUsers(session )

  return (
    <html lang="en" className='text-lg bg-slate-200 '>
      <SessionProvider session={session} >
      <body className={inter.className}>
        <Navbar /> 
        <Providers>
          <LoadData expenses={expenses}/>
          {children}
        </Providers>

      </body>
      </SessionProvider>
    </html>
  )
}

async function getUsers(session: Session | null): Promise<expense[]>{
  if(session){
    const prismaUser = await prisma.user.findUnique({
      where: {email: session?.user?.email || undefined}
    })
  
    
    const expenses = await prisma.expense.findMany({
      where: {userId: prismaUser?.id}
    });
  
    return expenses
  
  }
  let expenses: expense[] = [];
  return  expenses
}



